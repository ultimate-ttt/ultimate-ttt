name: Continuous Integration

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout 🛎️
      uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}

    - name: Use Node.js 14.x 🧳
      uses: actions/setup-node@v2
      with:
        node-version: 14.x
    
    - name: Get Yarn cache directory 📂
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Use Yarn cache 💾
      uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}

    - name: Install dependencies 🔌
      # `--prefer-offline` gives cache priority
      run: yarn install --prefer-offline --frozen-lockfile

    - name: Run Tests 🧪
      run: yarn test

    - name: Install Cypress 📦
      uses: cypress-io/github-action@v2
      with:
        runTests: false

    - name: Build site 🏗
      run: yarn build

    - name: Save build folder 🆙
      uses: actions/upload-artifact@v2
      with:
        name: build
        if-no-files-found: error
        path: build

  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2 
        
      - name: Use Node.js 14.x 🧳
        uses: actions/setup-node@v2
        with:
          node-version: 14.x

      - name: Download the build folders ⏬
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
  
      - name: Lighthouse CI 🌊
        run: |
          npm install -g @lhci/cli@0.8.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

  chrome:
    name: Chrome
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v2

      - name: Download the build folders ⏬
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      
      - name: "Chrome 🕹️"
        uses: cypress-io/github-action@v2
        with:
          build: yarn cypress info
          start: npx local-web-server -p 3000 --spa index.html -d build
          wait-on: "http://localhost:3000"
          # Use Custom Script for E2E testing so that videos are not trashed
          command: yarn test:int --e2e -v
          
      - name: Increase File Watchers 🔭
        # We don't want a lot of "ENOSPC: System limit for number of file watchers reached" warnings
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Component tests 🧪
        uses: cypress-io/github-action@v2
        with:
          # we have already installed everything
          install: false
          record: true
          # Use custom script for "cypress run-ct" so that browser is respected
          # Also make sure that previous videos are not trashed!
          command: yarn test:int --ct -v

      - name: Upload Screenshots 📸
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      # Test run video was always captured, so this action uses "always()" condition
      - name: Upload Videos 🎥
        uses: actions/upload-artifact@v1
        if: always()
        with:
          # It is possible that the videos are lagging.
          name: cypress-videos
          path: cypress/videos
